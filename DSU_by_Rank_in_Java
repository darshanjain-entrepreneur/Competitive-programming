package cptemplates;


import java.util.ArrayList;

// in o(1) tells if a node lie in same component or not . primarilty used in dynamic graph
public class DSU {

int rank[];
int parent[];

public DSU(int n){

    rank = new int[n+1];
    parent = new int[n+1];
for(int i=0;i<=n;i++)parent[i]=i;
}

public int findparent(int node){
    if(node == parent[node]){
        return node;
    }
return parent[node] = findparent(parent[node]);

}

public void unionbyRank(int u,int v){

int parentu = findparent(u);
int parentv = findparent(v);

if(parentu == parentv)return;
if(rank[parentu] < rank[parentv]){
    parent[parentu] = parentv;
}else if(rank[parentv] < rank[parentu]){

    parent[parentv]=parentu;
}else{

    parent[parentv]=parentu;
    rank[parentu]++;
}



}

    public static void main(String[] args) {
        DSU d = new DSU(7);
        d.unionbyRank(1,2);
        d.unionbyRank(2,3);
        d.unionbyRank(4,5);
        d.unionbyRank(6,7);
        d.unionbyRank(5,6);

        if(d.findparent(3) == d.findparent(7)){
            System.out.println("same");
        }else{
            System.out.println("not same");
        }

        d.unionbyRank(3,7);
        if(d.findparent(3) == d.findparent(7)){
            System.out.println("same");
        }else{
            System.out.println("not same");
        }

    }


}
