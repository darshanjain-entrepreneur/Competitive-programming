import java.io.*;
import java.util.*;

public class SegmentTree {
    private int[] tree;
    private int n;

    public SegmentTree(int size) {
        this.n = size;
        this.tree = new int[2 * n];
    }

    // Build the segment tree from the initial array
    public void build(int[] arr) {
        for (int i = 0; i < n; i++) {
            tree[n + i] = arr[i];
        }
        for (int i = n - 1; i > 0; --i) {
            tree[i] = tree[2 * i] + tree[2 * i + 1];
        }
    }

    // Update the value at index 'pos' to 'value'
    public void update(int pos, int value) {
        pos += n;
        tree[pos] = value;
        while (pos > 1) {
            pos /= 2;
            tree[pos] = tree[2 * pos] + tree[2 * pos + 1];
        }
    }

    // Query the sum of the range [l, r)
    public int query(int l, int r) {
        int sum = 0;
        l += n;
        r += n;
        while (l < r) {
            if ((l & 1) == 1) {
                sum += tree[l++];
            }
            if ((r & 1) == 1) {
                sum += tree[--r];
            }
            l /= 2;
            r /= 2;
        }
        return sum;
    }

    public static void main(String[] args) {
        // Example usage
        int[] arr = {1, 3, 5, 7, 9, 11};
        SegmentTree segTree = new SegmentTree(arr.length);
        segTree.build(arr);

        // Query sum of range [1, 4)
        System.out.println(segTree.query(1, 4)); // Output: 15

        // Update value at index 2 to 10
        segTree.update(2, 10);

        // Query sum of range [1, 4) after update
        System.out.println(segTree.query(1, 4)); // Output: 20
    }
}
